ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	Error_Handler:
  25              	.LFB70:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_DMA_Init();
  94:Core/Src/main.c ****   MX_I2C1_Init();
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
  97:Core/Src/main.c ****   MX_USART3_UART_Init();
  98:Core/Src/main.c ****   MX_ADC1_Init();
  99:Core/Src/main.c ****   MX_TIM2_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c ****   GPIO_LED_Init();
 102:Core/Src/main.c ****   IIC_GPIO_Init();
 103:Core/Src/main.c ****   ESP8266_GPIO_Config();
 104:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &usbRxBuf, 1);
 105:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &deviceRxBuf, 1); 
 106:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart3, &wifiRxBuf, 1);
 107:Core/Src/main.c **** 	UsbPrintf("Fier Board V1.1 update on %s at %s\r\n",__DATE__, __TIME__);
 108:Core/Src/main.c ****   uint32_t systemTick = 0;
 109:Core/Src/main.c ****   //macESP8266_CH_ENABLE();   //使能 ESP8266
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   //uint16_t adcValue[2]={0,0};
 116:Core/Src/main.c ****   //HAL_ADC_Start_DMA(&hadc1,(uint32_t *)adcValue,2); 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END 2 */
 119:Core/Src/main.c ****   Button_Manage();
 120:Core/Src/main.c ****   /* Infinite loop */
 121:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 122:Core/Src/main.c ****   while (1)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     /* USER CODE END WHILE */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 127:Core/Src/main.c ****    
 128:Core/Src/main.c ****     if (systemTick != HAL_GetTick()) 
 129:Core/Src/main.c ****     {
 130:Core/Src/main.c ****       CheckCommandList();       
 131:Core/Src/main.c ****       DeviceMassage();
 132:Core/Src/main.c ****       //show_wifi_Message();WIFI消息
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****       if (systemTick % 1000 == 0)
 135:Core/Src/main.c ****       {
 136:Core/Src/main.c ****         //LED()； 
 137:Core/Src/main.c ****         //UsbPrintf("\nv: %d, t: %d\r\n", adcValue[0],adcValue[1]);
 138:Core/Src/main.c ****         //UsbPrintf("V: %.4f, T: %d\r\n", adcValue[0]*3.3/4096, (0X6EE - adcValue[1])/0X05 + 25); 
 139:Core/Src/main.c ****         //SoftUART_SendByte();
 140:Core/Src/main.c ****         
 141:Core/Src/main.c ****       }
 142:Core/Src/main.c ****       if (systemTick % 500 == 0)
 143:Core/Src/main.c ****       {
 144:Core/Src/main.c ****         
 145:Core/Src/main.c ****       }
 146:Core/Src/main.c ****       systemTick = HAL_GetTick();
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 4


 147:Core/Src/main.c ****     }
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   /* USER CODE END 3 */
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief System Clock Configuration
 154:Core/Src/main.c ****   * @retval None
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c **** void SystemClock_Config(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 159:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 160:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 163:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 180:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 191:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 192:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /* USER CODE END 4 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 5


 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** void Error_Handler(void)
 207:Core/Src/main.c **** {
  27              		.loc 1 207 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 208:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 209:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 210:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 210 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 6


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 7


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 8


 211:Core/Src/main.c ****   while (1)
  49              		.loc 1 211 3 discriminator 1 view .LVU4
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****   }
  50              		.loc 1 213 3 discriminator 1 view .LVU5
 211:Core/Src/main.c ****   while (1)
  51              		.loc 1 211 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE70:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB69:
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 157 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 88
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 14, -4
  73 0002 97B0     		sub	sp, sp, #92
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 96
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 158 3 view .LVU8
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 158 22 is_stmt 0 view .LVU9
  78 0004 2822     		movs	r2, #40
  79 0006 0021     		movs	r1, #0
  80 0008 0CA8     		add	r0, sp, #48
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 159:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  83              		.loc 1 159 3 is_stmt 1 view .LVU10
 159:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  84              		.loc 1 159 22 is_stmt 0 view .LVU11
  85 000e 0023     		movs	r3, #0
  86 0010 0793     		str	r3, [sp, #28]
  87 0012 0893     		str	r3, [sp, #32]
  88 0014 0993     		str	r3, [sp, #36]
  89 0016 0A93     		str	r3, [sp, #40]
  90 0018 0B93     		str	r3, [sp, #44]
 160:Core/Src/main.c **** 
  91              		.loc 1 160 3 is_stmt 1 view .LVU12
 160:Core/Src/main.c **** 
  92              		.loc 1 160 28 is_stmt 0 view .LVU13
  93 001a 0193     		str	r3, [sp, #4]
  94 001c 0293     		str	r3, [sp, #8]
  95 001e 0393     		str	r3, [sp, #12]
  96 0020 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 9


  97 0022 0593     		str	r3, [sp, #20]
  98 0024 0693     		str	r3, [sp, #24]
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  99              		.loc 1 165 3 is_stmt 1 view .LVU14
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 100              		.loc 1 165 36 is_stmt 0 view .LVU15
 101 0026 0122     		movs	r2, #1
 102 0028 0C92     		str	r2, [sp, #48]
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 103              		.loc 1 166 3 is_stmt 1 view .LVU16
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 104              		.loc 1 166 30 is_stmt 0 view .LVU17
 105 002a 4FF48033 		mov	r3, #65536
 106 002e 0D93     		str	r3, [sp, #52]
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 107              		.loc 1 167 3 is_stmt 1 view .LVU18
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 108              		.loc 1 168 3 view .LVU19
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 109              		.loc 1 168 30 is_stmt 0 view .LVU20
 110 0030 1092     		str	r2, [sp, #64]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 111              		.loc 1 169 3 is_stmt 1 view .LVU21
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 112              		.loc 1 169 34 is_stmt 0 view .LVU22
 113 0032 0222     		movs	r2, #2
 114 0034 1392     		str	r2, [sp, #76]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 115              		.loc 1 170 3 is_stmt 1 view .LVU23
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 116              		.loc 1 170 35 is_stmt 0 view .LVU24
 117 0036 1493     		str	r3, [sp, #80]
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 118              		.loc 1 171 3 is_stmt 1 view .LVU25
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 119              		.loc 1 171 32 is_stmt 0 view .LVU26
 120 0038 4FF4E013 		mov	r3, #1835008
 121 003c 1593     		str	r3, [sp, #84]
 172:Core/Src/main.c ****   {
 122              		.loc 1 172 3 is_stmt 1 view .LVU27
 172:Core/Src/main.c ****   {
 123              		.loc 1 172 7 is_stmt 0 view .LVU28
 124 003e 0CA8     		add	r0, sp, #48
 125 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 126              	.LVL1:
 172:Core/Src/main.c ****   {
 127              		.loc 1 172 6 view .LVU29
 128 0044 C8B9     		cbnz	r0, .L8
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 129              		.loc 1 179 3 is_stmt 1 view .LVU30
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 130              		.loc 1 179 31 is_stmt 0 view .LVU31
 131 0046 0F23     		movs	r3, #15
 132 0048 0793     		str	r3, [sp, #28]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 133              		.loc 1 181 3 is_stmt 1 view .LVU32
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 10


 134              		.loc 1 181 34 is_stmt 0 view .LVU33
 135 004a 0221     		movs	r1, #2
 136 004c 0891     		str	r1, [sp, #32]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 137              		.loc 1 182 3 is_stmt 1 view .LVU34
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 138              		.loc 1 182 35 is_stmt 0 view .LVU35
 139 004e 0023     		movs	r3, #0
 140 0050 0993     		str	r3, [sp, #36]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141              		.loc 1 183 3 is_stmt 1 view .LVU36
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142              		.loc 1 183 36 is_stmt 0 view .LVU37
 143 0052 4FF48062 		mov	r2, #1024
 144 0056 0A92     		str	r2, [sp, #40]
 184:Core/Src/main.c **** 
 145              		.loc 1 184 3 is_stmt 1 view .LVU38
 184:Core/Src/main.c **** 
 146              		.loc 1 184 36 is_stmt 0 view .LVU39
 147 0058 0B93     		str	r3, [sp, #44]
 186:Core/Src/main.c ****   {
 148              		.loc 1 186 3 is_stmt 1 view .LVU40
 186:Core/Src/main.c ****   {
 149              		.loc 1 186 7 is_stmt 0 view .LVU41
 150 005a 07A8     		add	r0, sp, #28
 151 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 152              	.LVL2:
 186:Core/Src/main.c ****   {
 153              		.loc 1 186 6 view .LVU42
 154 0060 68B9     		cbnz	r0, .L9
 190:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 155              		.loc 1 190 3 is_stmt 1 view .LVU43
 190:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 156              		.loc 1 190 38 is_stmt 0 view .LVU44
 157 0062 0223     		movs	r3, #2
 158 0064 0193     		str	r3, [sp, #4]
 191:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 159              		.loc 1 191 3 is_stmt 1 view .LVU45
 191:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 160              		.loc 1 191 35 is_stmt 0 view .LVU46
 161 0066 4FF40043 		mov	r3, #32768
 162 006a 0393     		str	r3, [sp, #12]
 192:Core/Src/main.c ****   {
 163              		.loc 1 192 3 is_stmt 1 view .LVU47
 192:Core/Src/main.c ****   {
 164              		.loc 1 192 7 is_stmt 0 view .LVU48
 165 006c 01A8     		add	r0, sp, #4
 166 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 167              	.LVL3:
 192:Core/Src/main.c ****   {
 168              		.loc 1 192 6 view .LVU49
 169 0072 30B9     		cbnz	r0, .L10
 196:Core/Src/main.c **** 
 170              		.loc 1 196 1 view .LVU50
 171 0074 17B0     		add	sp, sp, #92
 172              	.LCFI2:
 173              		.cfi_remember_state
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 11


 174              		.cfi_def_cfa_offset 4
 175              		@ sp needed
 176 0076 5DF804FB 		ldr	pc, [sp], #4
 177              	.L8:
 178              	.LCFI3:
 179              		.cfi_restore_state
 174:Core/Src/main.c ****   }
 180              		.loc 1 174 5 is_stmt 1 view .LVU51
 181 007a FFF7FEFF 		bl	Error_Handler
 182              	.LVL4:
 183              	.L9:
 188:Core/Src/main.c ****   }
 184              		.loc 1 188 5 view .LVU52
 185 007e FFF7FEFF 		bl	Error_Handler
 186              	.LVL5:
 187              	.L10:
 194:Core/Src/main.c ****   }
 188              		.loc 1 194 5 view .LVU53
 189 0082 FFF7FEFF 		bl	Error_Handler
 190              	.LVL6:
 191              		.cfi_endproc
 192              	.LFE69:
 194              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 195              		.align	2
 196              	.LC0:
 197 0000 31363A30 		.ascii	"16:07:33\000"
 197      373A3333 
 197      00
 198 0009 000000   		.align	2
 199              	.LC1:
 200 000c 4A756E20 		.ascii	"Jun  7 2025\000"
 200      20372032 
 200      30323500 
 201              		.align	2
 202              	.LC2:
 203 0018 46696572 		.ascii	"Fier Board V1.1 update on %s at %s\015\012\000"
 203      20426F61 
 203      72642056 
 203      312E3120 
 203      75706461 
 204              		.section	.text.main,"ax",%progbits
 205              		.align	1
 206              		.global	main
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	main:
 212              	.LFB68:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 213              		.loc 1 70 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 10B5     		push	{r4, lr}
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 4, -8
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 12


 221              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 222              		.loc 1 78 3 view .LVU55
 223 0002 FFF7FEFF 		bl	HAL_Init
 224              	.LVL7:
  85:Core/Src/main.c **** 
 225              		.loc 1 85 3 view .LVU56
 226 0006 FFF7FEFF 		bl	SystemClock_Config
 227              	.LVL8:
  92:Core/Src/main.c ****   MX_DMA_Init();
 228              		.loc 1 92 3 view .LVU57
 229 000a FFF7FEFF 		bl	MX_GPIO_Init
 230              	.LVL9:
  93:Core/Src/main.c ****   MX_I2C1_Init();
 231              		.loc 1 93 3 view .LVU58
 232 000e FFF7FEFF 		bl	MX_DMA_Init
 233              	.LVL10:
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
 234              		.loc 1 94 3 view .LVU59
 235 0012 FFF7FEFF 		bl	MX_I2C1_Init
 236              	.LVL11:
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
 237              		.loc 1 95 3 view .LVU60
 238 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 239              	.LVL12:
  96:Core/Src/main.c ****   MX_USART3_UART_Init();
 240              		.loc 1 96 3 view .LVU61
 241 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 242              	.LVL13:
  97:Core/Src/main.c ****   MX_ADC1_Init();
 243              		.loc 1 97 3 view .LVU62
 244 001e FFF7FEFF 		bl	MX_USART3_UART_Init
 245              	.LVL14:
  98:Core/Src/main.c ****   MX_TIM2_Init();
 246              		.loc 1 98 3 view .LVU63
 247 0022 FFF7FEFF 		bl	MX_ADC1_Init
 248              	.LVL15:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 249              		.loc 1 99 3 view .LVU64
 250 0026 FFF7FEFF 		bl	MX_TIM2_Init
 251              	.LVL16:
 101:Core/Src/main.c ****   IIC_GPIO_Init();
 252              		.loc 1 101 3 view .LVU65
 253 002a FFF7FEFF 		bl	GPIO_LED_Init
 254              	.LVL17:
 102:Core/Src/main.c ****   ESP8266_GPIO_Config();
 255              		.loc 1 102 3 view .LVU66
 256 002e FFF7FEFF 		bl	IIC_GPIO_Init
 257              	.LVL18:
 103:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &usbRxBuf, 1);
 258              		.loc 1 103 3 view .LVU67
 259 0032 FFF7FEFF 		bl	ESP8266_GPIO_Config
 260              	.LVL19:
 104:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &deviceRxBuf, 1); 
 261              		.loc 1 104 3 view .LVU68
 262 0036 0122     		movs	r2, #1
 263 0038 1249     		ldr	r1, .L15
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 13


 264 003a 1348     		ldr	r0, .L15+4
 265 003c FFF7FEFF 		bl	HAL_UART_Receive_IT
 266              	.LVL20:
 105:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart3, &wifiRxBuf, 1);
 267              		.loc 1 105 3 view .LVU69
 268 0040 0122     		movs	r2, #1
 269 0042 1249     		ldr	r1, .L15+8
 270 0044 1248     		ldr	r0, .L15+12
 271 0046 FFF7FEFF 		bl	HAL_UART_Receive_IT
 272              	.LVL21:
 106:Core/Src/main.c **** 	UsbPrintf("Fier Board V1.1 update on %s at %s\r\n",__DATE__, __TIME__);
 273              		.loc 1 106 3 view .LVU70
 274 004a 0122     		movs	r2, #1
 275 004c 1149     		ldr	r1, .L15+16
 276 004e 1248     		ldr	r0, .L15+20
 277 0050 FFF7FEFF 		bl	HAL_UART_Receive_IT
 278              	.LVL22:
 107:Core/Src/main.c ****   uint32_t systemTick = 0;
 279              		.loc 1 107 2 view .LVU71
 280 0054 114A     		ldr	r2, .L15+24
 281 0056 1249     		ldr	r1, .L15+28
 282 0058 1248     		ldr	r0, .L15+32
 283 005a FFF7FEFF 		bl	UsbPrintf
 284              	.LVL23:
 108:Core/Src/main.c ****   //macESP8266_CH_ENABLE();   //使能 ESP8266
 285              		.loc 1 108 3 view .LVU72
 111:Core/Src/main.c **** 
 286              		.loc 1 111 3 view .LVU73
 287 005e 1248     		ldr	r0, .L15+36
 288 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 289              	.LVL24:
 119:Core/Src/main.c ****   /* Infinite loop */
 290              		.loc 1 119 3 view .LVU74
 291 0064 FFF7FEFF 		bl	Button_Manage
 292              	.LVL25:
 108:Core/Src/main.c ****   //macESP8266_CH_ENABLE();   //使能 ESP8266
 293              		.loc 1 108 12 is_stmt 0 view .LVU75
 294 0068 0024     		movs	r4, #0
 295              	.LVL26:
 296              	.L12:
 122:Core/Src/main.c ****   {
 297              		.loc 1 122 3 is_stmt 1 view .LVU76
 128:Core/Src/main.c ****     {
 298              		.loc 1 128 5 view .LVU77
 128:Core/Src/main.c ****     {
 299              		.loc 1 128 23 is_stmt 0 view .LVU78
 300 006a FFF7FEFF 		bl	HAL_GetTick
 301              	.LVL27:
 128:Core/Src/main.c ****     {
 302              		.loc 1 128 8 view .LVU79
 303 006e A042     		cmp	r0, r4
 304 0070 FBD0     		beq	.L12
 130:Core/Src/main.c ****       DeviceMassage();
 305              		.loc 1 130 7 is_stmt 1 view .LVU80
 306 0072 FFF7FEFF 		bl	CheckCommandList
 307              	.LVL28:
 131:Core/Src/main.c ****       //show_wifi_Message();WIFI消息
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 14


 308              		.loc 1 131 7 view .LVU81
 309 0076 FFF7FEFF 		bl	DeviceMassage
 310              	.LVL29:
 134:Core/Src/main.c ****       {
 311              		.loc 1 134 7 view .LVU82
 141:Core/Src/main.c ****       if (systemTick % 500 == 0)
 312              		.loc 1 141 7 view .LVU83
 142:Core/Src/main.c ****       {
 313              		.loc 1 142 7 view .LVU84
 145:Core/Src/main.c ****       systemTick = HAL_GetTick();
 314              		.loc 1 145 7 view .LVU85
 146:Core/Src/main.c ****     }
 315              		.loc 1 146 7 view .LVU86
 146:Core/Src/main.c ****     }
 316              		.loc 1 146 20 is_stmt 0 view .LVU87
 317 007a FFF7FEFF 		bl	HAL_GetTick
 318              	.LVL30:
 319 007e 0446     		mov	r4, r0
 320              	.LVL31:
 146:Core/Src/main.c ****     }
 321              		.loc 1 146 20 view .LVU88
 322 0080 F3E7     		b	.L12
 323              	.L16:
 324 0082 00BF     		.align	2
 325              	.L15:
 326 0084 00000000 		.word	usbRxBuf
 327 0088 00000000 		.word	huart1
 328 008c 00000000 		.word	deviceRxBuf
 329 0090 00000000 		.word	huart2
 330 0094 00000000 		.word	wifiRxBuf
 331 0098 00000000 		.word	huart3
 332 009c 00000000 		.word	.LC0
 333 00a0 0C000000 		.word	.LC1
 334 00a4 18000000 		.word	.LC2
 335 00a8 00000000 		.word	htim2
 336              		.cfi_endproc
 337              	.LFE68:
 339              		.text
 340              	.Letext0:
 341              		.file 3 "d:\\mingw\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none
 342              		.file 4 "d:\\mingw\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none
 343              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 344              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 345              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 346              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 347              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 348              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 349              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 350              		.file 12 "Core/Inc/usart.h"
 351              		.file 13 "User/Inc/command.h"
 352              		.file 14 "Core/Inc/tim.h"
 353              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 354              		.file 16 "Core/Inc/gpio.h"
 355              		.file 17 "Core/Inc/dma.h"
 356              		.file 18 "Core/Inc/i2c.h"
 357              		.file 19 "Core/Inc/adc.h"
 358              		.file 20 "User/Inc/soft_i2c.h"
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 15


 359              		.file 21 "User/Inc/esp8266.h"
 360              		.file 22 "User/Inc/multi_button.h"
 361              		.file 23 "<built-in>"
ARM GAS  C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:18     .text.Error_Handler:00000000 $t
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:24     .text.Error_Handler:00000000 Error_Handler
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:57     .text.SystemClock_Config:00000000 $t
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:63     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:195    .rodata.main.str1.4:00000000 $d
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:205    .text.main:00000000 $t
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:211    .text.main:00000000 main
C:\Users\84759\AppData\Local\Temp\ccnz1OAl.s:326    .text.main:00000084 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_ADC1_Init
MX_TIM2_Init
GPIO_LED_Init
IIC_GPIO_Init
ESP8266_GPIO_Config
HAL_UART_Receive_IT
UsbPrintf
HAL_TIM_Base_Start_IT
Button_Manage
HAL_GetTick
CheckCommandList
DeviceMassage
usbRxBuf
huart1
deviceRxBuf
huart2
wifiRxBuf
huart3
htim2
